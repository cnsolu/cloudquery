// Code generated by codegen using template tables.go.tpl; DO NOT EDIT.

package plugin

import (
	"github.com/cloudquery/plugin-sdk/schema"

	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/accessanalyzer"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/acm"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/apigatewayv2"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/applicationautoscaling"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/appsync"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/athena"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/autoscaling"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/backup"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/cloudformation"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/cloudfront"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/cloudtrail"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/cloudwatch"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/cloudwatchlogs"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/codebuild"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/codepipeline"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/cognito"
	"github.com/cloudquery/cloudquery/plugins/source/aws/codegen/configservice"
)

func PluginAutoGeneratedTables() []*schema.Table {
	return []*schema.Table{
		accessanalyzer.AccessAnalyzerAccessanalyzers(),
		acm.ACMCertificates(),
		apigatewayv2.Apigatewayv2Apis(),
		apigatewayv2.Apigatewayv2DomainNames(),
		apigatewayv2.Apigatewayv2VpcLinks(),
		applicationautoscaling.ApplicationAutoscalingPolicies(),
		appsync.AppSyncGraphqlApis(),
		athena.AthenaDataCatalogs(),
		athena.AthenaWorkGroups(),
		autoscaling.AutoscalingLaunchConfigurations(),
		autoscaling.AutoscalingScheduledActions(),
		autoscaling.AutoscalingGroups(),
		backup.BackupGlobalSettings(),
		backup.BackupRegionSettings(),
		backup.BackupVaults(),
		backup.BackupBackupPlans(),
		cloudformation.CloudformationStacks(),
		cloudfront.CloudfrontCachePolicies(),
		cloudfront.CloudfrontDistributions(),
		cloudtrail.CloudtrailTrails(),
		cloudwatch.CloudwatchAlarms(),
		cloudwatchlogs.CloudwatchLogsLogGroups(),
		cloudwatchlogs.CloudwatchLogsMetricFilters(),
		codebuild.CodebuildProjects(),
		codepipeline.CodePipelinePipelines(),
		codepipeline.CodePipelineWebhooks(),
		cognito.CognitoIdentityPools(),
		cognito.CognitoUserPools(),
		configservice.ConfigServiceConfigurationRecorders(),
		configservice.ConfigServiceConformancePacks(),
	}
}
