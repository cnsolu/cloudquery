// Code generated by codegen using template resource_get_mock_test.go.tpl; DO NOT EDIT.

package configservice

import (
	"testing"

	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/cloudquery/plugins/source/aws/client/mocks"
	"github.com/cloudquery/faker/v3"
	"github.com/golang/mock/gomock"

	"github.com/aws/aws-sdk-go-v2/service/configservice"
	"github.com/aws/aws-sdk-go-v2/service/configservice/types"
)

func buildConfigServiceConfigurationRecorderStatus(t *testing.T, ctrl *gomock.Controller) client.Services {
	mock := mocks.NewMockConfigServiceClient(ctrl)

	item := types.ConfigurationRecorderStatus{}

	err := faker.FakeData(&item)
	if err != nil {
		t.Fatal(err)
	}
	mock.EXPECT().DescribeConfigurationRecorderStatus(gomock.Any(), gomock.Any(), gomock.Any()).Return(

		&configservice.DescribeConfigurationRecorderStatusOutput{
			ConfigurationRecordersStatus: []types.ConfigurationRecorderStatus{item},
		}, nil)

	return client.Services{
		ConfigService: mock,
	}
}

func TestConfigServiceConfigurationRecorderStatus(t *testing.T) {
	client.MockTestHelper(t, ConfigServiceConfigurationRecorderStatus(), buildConfigServiceConfigurationRecorderStatus, client.TestOptions{})
}
